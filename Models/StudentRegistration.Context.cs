//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASPMVCEntity.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StudentRegistrationEntities : DbContext
    {
        public StudentRegistrationEntities()
            : base("name=StudentRegistrationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DocDtl> DocDtls { get; set; }
        public virtual DbSet<Student_Info> Student_Info { get; set; }
    
        public virtual ObjectResult<BindDtls_Result> BindDtls(string flag, string param)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDtls_Result>("BindDtls", flagParameter, paramParameter);
        }
    
        public virtual int deleteStudent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteStudent", idParameter);
        }
    
        public virtual ObjectResult<getStudent_Result> getStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudent_Result>("getStudent");
        }
    
        public virtual int insertStudent(string studentName, Nullable<System.DateTime> dob, string gender, string degreeId, string branchId, string emailId, string mobileNo, Nullable<bool> iActive, string photoPath, string othDocPath, ObjectParameter id)
        {
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var degreeIdParameter = degreeId != null ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var iActiveParameter = iActive.HasValue ?
                new ObjectParameter("iActive", iActive) :
                new ObjectParameter("iActive", typeof(bool));
    
            var photoPathParameter = photoPath != null ?
                new ObjectParameter("photoPath", photoPath) :
                new ObjectParameter("photoPath", typeof(string));
    
            var othDocPathParameter = othDocPath != null ?
                new ObjectParameter("othDocPath", othDocPath) :
                new ObjectParameter("othDocPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertStudent", studentNameParameter, dobParameter, genderParameter, degreeIdParameter, branchIdParameter, emailIdParameter, mobileNoParameter, iActiveParameter, photoPathParameter, othDocPathParameter, id);
        }
    
        public virtual int Student(Nullable<int> id, string studentName, Nullable<System.DateTime> dob, string gender, string degreeId, string branchId, string emailId, string mobileNo, Nullable<bool> iActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var degreeIdParameter = degreeId != null ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var iActiveParameter = iActive.HasValue ?
                new ObjectParameter("iActive", iActive) :
                new ObjectParameter("iActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Student", idParameter, studentNameParameter, dobParameter, genderParameter, degreeIdParameter, branchIdParameter, emailIdParameter, mobileNoParameter, iActiveParameter);
        }
    
        public virtual int updateStudent(string studentName, Nullable<System.DateTime> dob, string gender, string degreeId, string branchId, string emailId, string mobileNo, Nullable<bool> iActive, string photoPath, string othDocPath, Nullable<int> id)
        {
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var degreeIdParameter = degreeId != null ?
                new ObjectParameter("degreeId", degreeId) :
                new ObjectParameter("degreeId", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var iActiveParameter = iActive.HasValue ?
                new ObjectParameter("iActive", iActive) :
                new ObjectParameter("iActive", typeof(bool));
    
            var photoPathParameter = photoPath != null ?
                new ObjectParameter("photoPath", photoPath) :
                new ObjectParameter("photoPath", typeof(string));
    
            var othDocPathParameter = othDocPath != null ?
                new ObjectParameter("othDocPath", othDocPath) :
                new ObjectParameter("othDocPath", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStudent", studentNameParameter, dobParameter, genderParameter, degreeIdParameter, branchIdParameter, emailIdParameter, mobileNoParameter, iActiveParameter, photoPathParameter, othDocPathParameter, idParameter);
        }
    }
}
